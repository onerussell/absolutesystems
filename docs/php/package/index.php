<PRE>
<h2>Организация классов в пакеты</h2>
by Max Medvetskiy
last modified: 2005-11-10

Архитектрура Zend 2 Engine не предусматривает внутренней поддержки пакетов (package). 
Тем ни менее по прежнему имеется возможность огранизовать классы таким образом чтобы избежать 
пересечений в пространстве имен и тем самым искуственно прийти к понятию пакета в PHP.
Эта техника успешно применяется при оранизации классов в библиотеках PEAR.

Допустим у нас есть два класса

forum/User.php
store/User.php

в случае если в обоих случаях класс декларируется как class User {} то следующий код 

<?highlight_file('code/code1.html') ?>

вернет нам Fatal error: Cannot redeclare class user in...

чтобы избежать такой ситуации необходимо включить в имя класса путь к файлу в котором содержиться 
класс. Таким образрм декларации классов из предидущего примера превратяться в

<?highlight_file('code/code2.html') ?>

используя такой подход удается свести к минимуму вероятность конфликта имен.

<h3>Новое в PHP5. __autoload()</h3>
Хорошей практикой считается хранить каждый класс в своем отдельном файле. Такой подход 
тем ни менее приводит к тому что возникает необходмость писать длинный список reqire_once()
вначале каждого скирпта.

<a href="http://us3.php.net/__autoload">Autoload</a> автоматически вызывается перед тем как 
сгенерировать исключение в случае если происходит обращении к классу который не был декларирован.

Используя принятую нами в начале документа систему обозначений для имен классов мы можем
оформить overloaded определение функции как

<?highlight_file('code/code3.html') ?>

(DIRECTORY_SEPARATOR в случае *nix будет '/')

тогда в случае 

<?highlight_file('code/code4.html') ?>

будет осуществляться попытка 
включить файлы 
forum/User.php и store/User.php

(<a href="mailto:max@engine37.com">Сomments/Questions?</a>)

